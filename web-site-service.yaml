# Header specifying the API version and the kind of Kubernetes object, which is a Service in this case.
apiVersion: v1
kind: Service

# Metadata section provides details about the Service, such as its name.
metadata:
  name: web-site-service # The name of the Service, used to identify it within the Kubernetes cluster.

# The specification (spec) section defines the desired state of the Service.
spec:
  # Selector determines how the Service finds the pods it provides access to, based on labels.
  selector:
    app: web-site # The Service routes traffic to pods with the label 'app' set to 'web-site', matching the deployment.

  # Ports section defines the network ports configuration for the Service.
  ports:
    - protocol: TCP # Specifies the network protocol used by the Service, TCP in this case.
      port: 80 # The port on which the Service is exposed. External traffic to the Service on this port is forwarded to targetPort of the pods.
      targetPort: 80 # The port on the pod to forward traffic to, matching the containerPort defined in the deployment.

  # Type of the Service, which determines how it is exposed. LoadBalancer exposes the Service externally through a cloud provider's load balancer.
  type: LoadBalancer